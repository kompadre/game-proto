/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.gameproto.v1.LookAroundAnswer', null, global);
goog.exportSymbol('proto.gameproto.v1.LookAroundRequest', null, global);
goog.exportSymbol('proto.gameproto.v1.Object', null, global);
goog.exportSymbol('proto.gameproto.v1.ObjectAttribute', null, global);
goog.exportSymbol('proto.gameproto.v1.SessionGrant', null, global);
goog.exportSymbol('proto.gameproto.v1.SessionRequest', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gameproto.v1.SessionRequest = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gameproto.v1.SessionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.gameproto.v1.SessionRequest.displayName = 'proto.gameproto.v1.SessionRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.gameproto.v1.SessionRequest.prototype.toObject = function(opt_includeInstance) {
        return proto.gameproto.v1.SessionRequest.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.gameproto.v1.SessionRequest} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.gameproto.v1.SessionRequest.toObject = function(includeInstance, msg) {
        var f, obj = {
            username: jspb.Message.getFieldWithDefault(msg, 1, ""),
            password: jspb.Message.getFieldWithDefault(msg, 2, "")
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gameproto.v1.SessionRequest}
 */
proto.gameproto.v1.SessionRequest.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.gameproto.v1.SessionRequest;
    return proto.gameproto.v1.SessionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gameproto.v1.SessionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gameproto.v1.SessionRequest}
 */
proto.gameproto.v1.SessionRequest.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setUsername(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setPassword(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gameproto.v1.SessionRequest.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    proto.gameproto.v1.SessionRequest.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gameproto.v1.SessionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gameproto.v1.SessionRequest.serializeBinaryToWriter = function(message, writer) {
    var f = undefined;
    f = message.getUsername();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
    f = message.getPassword();
    if (f.length > 0) {
        writer.writeString(
            2,
            f
        );
    }
};


/**
 * optional string username = 1;
 * @return {string}
 */
proto.gameproto.v1.SessionRequest.prototype.getUsername = function() {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gameproto.v1.SessionRequest.prototype.setUsername = function(value) {
    jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string password = 2;
 * @return {string}
 */
proto.gameproto.v1.SessionRequest.prototype.getPassword = function() {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.gameproto.v1.SessionRequest.prototype.setPassword = function(value) {
    jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gameproto.v1.SessionGrant = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gameproto.v1.SessionGrant, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.gameproto.v1.SessionGrant.displayName = 'proto.gameproto.v1.SessionGrant';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.gameproto.v1.SessionGrant.prototype.toObject = function(opt_includeInstance) {
        return proto.gameproto.v1.SessionGrant.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.gameproto.v1.SessionGrant} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.gameproto.v1.SessionGrant.toObject = function(includeInstance, msg) {
        var f, obj = {
            uuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
            reason: jspb.Message.getFieldWithDefault(msg, 2, "")
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gameproto.v1.SessionGrant}
 */
proto.gameproto.v1.SessionGrant.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.gameproto.v1.SessionGrant;
    return proto.gameproto.v1.SessionGrant.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gameproto.v1.SessionGrant} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gameproto.v1.SessionGrant}
 */
proto.gameproto.v1.SessionGrant.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setUuid(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setReason(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gameproto.v1.SessionGrant.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    proto.gameproto.v1.SessionGrant.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gameproto.v1.SessionGrant} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gameproto.v1.SessionGrant.serializeBinaryToWriter = function(message, writer) {
    var f = undefined;
    f = message.getUuid();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
    f = message.getReason();
    if (f.length > 0) {
        writer.writeString(
            2,
            f
        );
    }
};


/**
 * optional string uuid = 1;
 * @return {string}
 */
proto.gameproto.v1.SessionGrant.prototype.getUuid = function() {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gameproto.v1.SessionGrant.prototype.setUuid = function(value) {
    jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string reason = 2;
 * @return {string}
 */
proto.gameproto.v1.SessionGrant.prototype.getReason = function() {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.gameproto.v1.SessionGrant.prototype.setReason = function(value) {
    jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gameproto.v1.LookAroundRequest = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gameproto.v1.LookAroundRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.gameproto.v1.LookAroundRequest.displayName = 'proto.gameproto.v1.LookAroundRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.gameproto.v1.LookAroundRequest.prototype.toObject = function(opt_includeInstance) {
        return proto.gameproto.v1.LookAroundRequest.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.gameproto.v1.LookAroundRequest} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.gameproto.v1.LookAroundRequest.toObject = function(includeInstance, msg) {
        var f, obj = {
            myuuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
            otheruuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
            tellmemore: jspb.Message.getFieldWithDefault(msg, 3, false)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gameproto.v1.LookAroundRequest}
 */
proto.gameproto.v1.LookAroundRequest.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.gameproto.v1.LookAroundRequest;
    return proto.gameproto.v1.LookAroundRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gameproto.v1.LookAroundRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gameproto.v1.LookAroundRequest}
 */
proto.gameproto.v1.LookAroundRequest.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setMyuuid(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setOtheruuid(value);
                break;
            case 3:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setTellmemore(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gameproto.v1.LookAroundRequest.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    proto.gameproto.v1.LookAroundRequest.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gameproto.v1.LookAroundRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gameproto.v1.LookAroundRequest.serializeBinaryToWriter = function(message, writer) {
    var f = undefined;
    f = message.getMyuuid();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
    f = message.getOtheruuid();
    if (f.length > 0) {
        writer.writeString(
            2,
            f
        );
    }
    f = message.getTellmemore();
    if (f) {
        writer.writeBool(
            3,
            f
        );
    }
};


/**
 * optional string myuuid = 1;
 * @return {string}
 */
proto.gameproto.v1.LookAroundRequest.prototype.getMyuuid = function() {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gameproto.v1.LookAroundRequest.prototype.setMyuuid = function(value) {
    jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string otheruuid = 2;
 * @return {string}
 */
proto.gameproto.v1.LookAroundRequest.prototype.getOtheruuid = function() {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.gameproto.v1.LookAroundRequest.prototype.setOtheruuid = function(value) {
    jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool tellmemore = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.gameproto.v1.LookAroundRequest.prototype.getTellmemore = function() {
    return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.gameproto.v1.LookAroundRequest.prototype.setTellmemore = function(value) {
    jspb.Message.setProto3BooleanField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gameproto.v1.LookAroundAnswer = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.gameproto.v1.LookAroundAnswer.repeatedFields_, null);
};
goog.inherits(proto.gameproto.v1.LookAroundAnswer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.gameproto.v1.LookAroundAnswer.displayName = 'proto.gameproto.v1.LookAroundAnswer';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gameproto.v1.LookAroundAnswer.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.gameproto.v1.LookAroundAnswer.prototype.toObject = function(opt_includeInstance) {
        return proto.gameproto.v1.LookAroundAnswer.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.gameproto.v1.LookAroundAnswer} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.gameproto.v1.LookAroundAnswer.toObject = function(includeInstance, msg) {
        var f, obj = {
            resultsList: jspb.Message.toObjectList(msg.getResultsList(),
                proto.gameproto.v1.Object.toObject, includeInstance)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gameproto.v1.LookAroundAnswer}
 */
proto.gameproto.v1.LookAroundAnswer.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.gameproto.v1.LookAroundAnswer;
    return proto.gameproto.v1.LookAroundAnswer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gameproto.v1.LookAroundAnswer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gameproto.v1.LookAroundAnswer}
 */
proto.gameproto.v1.LookAroundAnswer.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.gameproto.v1.Object;
                reader.readMessage(value, proto.gameproto.v1.Object.deserializeBinaryFromReader);
                msg.addResults(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gameproto.v1.LookAroundAnswer.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    proto.gameproto.v1.LookAroundAnswer.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gameproto.v1.LookAroundAnswer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gameproto.v1.LookAroundAnswer.serializeBinaryToWriter = function(message, writer) {
    var f = undefined;
    f = message.getResultsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(
            1,
            f,
            proto.gameproto.v1.Object.serializeBinaryToWriter
        );
    }
};


/**
 * repeated Object results = 1;
 * @return {!Array<!proto.gameproto.v1.Object>}
 */
proto.gameproto.v1.LookAroundAnswer.prototype.getResultsList = function() {
    return /** @type{!Array<!proto.gameproto.v1.Object>} */ (
        jspb.Message.getRepeatedWrapperField(this, proto.gameproto.v1.Object, 1));
};


/** @param {!Array<!proto.gameproto.v1.Object>} value */
proto.gameproto.v1.LookAroundAnswer.prototype.setResultsList = function(value) {
    jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.gameproto.v1.Object=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gameproto.v1.Object}
 */
proto.gameproto.v1.LookAroundAnswer.prototype.addResults = function(opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.gameproto.v1.Object, opt_index);
};


proto.gameproto.v1.LookAroundAnswer.prototype.clearResultsList = function() {
    this.setResultsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gameproto.v1.ObjectAttribute = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gameproto.v1.ObjectAttribute, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.gameproto.v1.ObjectAttribute.displayName = 'proto.gameproto.v1.ObjectAttribute';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.gameproto.v1.ObjectAttribute.prototype.toObject = function(opt_includeInstance) {
        return proto.gameproto.v1.ObjectAttribute.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.gameproto.v1.ObjectAttribute} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.gameproto.v1.ObjectAttribute.toObject = function(includeInstance, msg) {
        var f, obj = {
            name: jspb.Message.getFieldWithDefault(msg, 1, ""),
            currentvalue: jspb.Message.getFieldWithDefault(msg, 2, ""),
            targetvalue: jspb.Message.getFieldWithDefault(msg, 3, ""),
            ttl: jspb.Message.getFieldWithDefault(msg, 4, 0)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gameproto.v1.ObjectAttribute}
 */
proto.gameproto.v1.ObjectAttribute.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.gameproto.v1.ObjectAttribute;
    return proto.gameproto.v1.ObjectAttribute.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gameproto.v1.ObjectAttribute} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gameproto.v1.ObjectAttribute}
 */
proto.gameproto.v1.ObjectAttribute.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setCurrentvalue(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setTargetvalue(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setTtl(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gameproto.v1.ObjectAttribute.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    proto.gameproto.v1.ObjectAttribute.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gameproto.v1.ObjectAttribute} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gameproto.v1.ObjectAttribute.serializeBinaryToWriter = function(message, writer) {
    var f = undefined;
    f = message.getName();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
    f = message.getCurrentvalue();
    if (f.length > 0) {
        writer.writeString(
            2,
            f
        );
    }
    f = message.getTargetvalue();
    if (f.length > 0) {
        writer.writeString(
            3,
            f
        );
    }
    f = message.getTtl();
    if (f !== 0) {
        writer.writeInt32(
            4,
            f
        );
    }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.gameproto.v1.ObjectAttribute.prototype.getName = function() {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gameproto.v1.ObjectAttribute.prototype.setName = function(value) {
    jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string currentvalue = 2;
 * @return {string}
 */
proto.gameproto.v1.ObjectAttribute.prototype.getCurrentvalue = function() {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.gameproto.v1.ObjectAttribute.prototype.setCurrentvalue = function(value) {
    jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string targetvalue = 3;
 * @return {string}
 */
proto.gameproto.v1.ObjectAttribute.prototype.getTargetvalue = function() {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.gameproto.v1.ObjectAttribute.prototype.setTargetvalue = function(value) {
    jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 ttl = 4;
 * @return {number}
 */
proto.gameproto.v1.ObjectAttribute.prototype.getTtl = function() {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.gameproto.v1.ObjectAttribute.prototype.setTtl = function(value) {
    jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gameproto.v1.Object = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.gameproto.v1.Object.repeatedFields_, null);
};
goog.inherits(proto.gameproto.v1.Object, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.gameproto.v1.Object.displayName = 'proto.gameproto.v1.Object';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gameproto.v1.Object.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.gameproto.v1.Object.prototype.toObject = function(opt_includeInstance) {
        return proto.gameproto.v1.Object.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.gameproto.v1.Object} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.gameproto.v1.Object.toObject = function(includeInstance, msg) {
        var f, obj = {
            uuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
            x: jspb.Message.getFieldWithDefault(msg, 2, 0),
            y: jspb.Message.getFieldWithDefault(msg, 3, 0),
            attributesList: jspb.Message.toObjectList(msg.getAttributesList(),
                proto.gameproto.v1.ObjectAttribute.toObject, includeInstance)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gameproto.v1.Object}
 */
proto.gameproto.v1.Object.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.gameproto.v1.Object;
    return proto.gameproto.v1.Object.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gameproto.v1.Object} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gameproto.v1.Object}
 */
proto.gameproto.v1.Object.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setUuid(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setX(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setY(value);
                break;
            case 4:
                var value = new proto.gameproto.v1.ObjectAttribute;
                reader.readMessage(value, proto.gameproto.v1.ObjectAttribute.deserializeBinaryFromReader);
                msg.addAttributes(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gameproto.v1.Object.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    proto.gameproto.v1.Object.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gameproto.v1.Object} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gameproto.v1.Object.serializeBinaryToWriter = function(message, writer) {
    var f = undefined;
    f = message.getUuid();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
    f = message.getX();
    if (f !== 0) {
        writer.writeInt32(
            2,
            f
        );
    }
    f = message.getY();
    if (f !== 0) {
        writer.writeInt32(
            3,
            f
        );
    }
    f = message.getAttributesList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(
            4,
            f,
            proto.gameproto.v1.ObjectAttribute.serializeBinaryToWriter
        );
    }
};


/**
 * optional string uuid = 1;
 * @return {string}
 */
proto.gameproto.v1.Object.prototype.getUuid = function() {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gameproto.v1.Object.prototype.setUuid = function(value) {
    jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 x = 2;
 * @return {number}
 */
proto.gameproto.v1.Object.prototype.getX = function() {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.gameproto.v1.Object.prototype.setX = function(value) {
    jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 y = 3;
 * @return {number}
 */
proto.gameproto.v1.Object.prototype.getY = function() {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.gameproto.v1.Object.prototype.setY = function(value) {
    jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated ObjectAttribute attributes = 4;
 * @return {!Array<!proto.gameproto.v1.ObjectAttribute>}
 */
proto.gameproto.v1.Object.prototype.getAttributesList = function() {
    return /** @type{!Array<!proto.gameproto.v1.ObjectAttribute>} */ (
        jspb.Message.getRepeatedWrapperField(this, proto.gameproto.v1.ObjectAttribute, 4));
};


/** @param {!Array<!proto.gameproto.v1.ObjectAttribute>} value */
proto.gameproto.v1.Object.prototype.setAttributesList = function(value) {
    jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.gameproto.v1.ObjectAttribute=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gameproto.v1.ObjectAttribute}
 */
proto.gameproto.v1.Object.prototype.addAttributes = function(opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.gameproto.v1.ObjectAttribute, opt_index);
};


proto.gameproto.v1.Object.prototype.clearAttributesList = function() {
    this.setAttributesList([]);
};


goog.object.extend(exports, proto.gameproto.v1);